From ff330ff8ace2a52ce2ca555a3492d955e975c56c Mon Sep 17 00:00:00 2001
From: Krzysztof Chojnowski <krzysiek@embedev.pl>
Date: Fri, 20 Mar 2020 21:10:30 +0100
Subject: [PATCH] Fixed display transition between u-boot and kernel

---
 drivers/clk/clk-stm32mp1.c                    | 21 +++++--
 drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c | 63 +++++++++++--------
 drivers/gpu/drm/panel/panel-ilitek-ili9881c.c | 18 +++---
 drivers/gpu/drm/stm/ltdc.c                    | 10 +--
 4 files changed, 66 insertions(+), 46 deletions(-)

diff --git a/drivers/clk/clk-stm32mp1.c b/drivers/clk/clk-stm32mp1.c
index 95ed87571..e39b5e370 100644
--- a/drivers/clk/clk-stm32mp1.c
+++ b/drivers/clk/clk-stm32mp1.c
@@ -2480,8 +2480,12 @@ static const struct clock_config stm32mp1_clock_cfg[] = {
 	PCLK(TMPSENS, "tmpsens", "pclk3", 0, G_TMPSENS),
 	PCLK(PMBCTRL, "pmbctrl", "pclk3", 0, G_PMBCTRL),
 	PCLK(HDP, "hdp", "pclk3", 0, G_HDP),
-	PCLK(LTDC, "ltdc", "pclk4", 0, G_LTDC),
-	PCLK(DSI, "dsi", "pclk4", 0, G_DSI),
+
+	//PCLK(LTDC, "ltdc", "pclk4", 0, G_LTDC),
+	//PCLK(DSI, "dsi", "pclk4", 0, G_DSI),
+	PCLK(LTDC, "ltdc", "pclk4", CLK_IS_CRITICAL, G_LTDC),
+	PCLK(DSI, "dsi", "pclk4",CLK_IS_CRITICAL , G_DSI),
+
 	PCLK(IWDG2, "iwdg2", "pclk4", 0, G_IWDG2),
 	PCLK(USBPHY, "usbphy", "pclk4", 0, G_USBPHY),
 	PCLK(STGENRO, "stgenro", "pclk4", 0, G_STGENRO),
@@ -2583,15 +2587,22 @@ static const struct clock_config stm32mp1_clock_cfg[] = {
 	KCLK(SAI3_K, "sai3_k", sai_src, 0, G_SAI3, M_SAI3),
 	KCLK(SAI4_K, "sai4_k", sai_src, 0, G_SAI4, M_SAI4),
 	KCLK(ADC12_K, "adc12_k", adc12_src, 0, G_ADC12, M_ADC12),
-	KCLK(DSI_K, "dsi_k", dsi_src, 0, G_DSI, M_DSI),
+
+	//KCLK(DSI_K, "dsi_k", dsi_src, 0, G_DSI, M_DSI),
+	KCLK(DSI_K, "dsi_k", dsi_src, CLK_IS_CRITICAL, G_DSI, M_DSI),
+
 	KCLK(ADFSDM_K, "adfsdm_k", sai_src, 0, G_ADFSDM, M_SAI1),
 	KCLK(USBO_K, "usbo_k", usbo_src, 0, G_USBO, M_USBO),
 	KCLK(ETHCK_K, "ethck_k", eth_src, 0, G_ETHCK, M_ETHCK),
 
 	/* Particulary Kernel Clocks (no mux or no gate) */
 	MGATE_MP1(DFSDM_K, "dfsdm_k", "ck_mcu", 0, G_DFSDM),
-	MGATE_MP1(DSI_PX, "dsi_px", "pll4_q", CLK_SET_RATE_PARENT, G_DSI),
-	MGATE_MP1(LTDC_PX, "ltdc_px", "pll4_q", CLK_SET_RATE_PARENT, G_LTDC),
+	
+	//MGATE_MP1(DSI_PX, "dsi_px", "pll4_q", CLK_SET_RATE_PARENT, G_DSI),
+	//MGATE_MP1(LTDC_PX, "ltdc_px", "pll4_q", CLK_SET_RATE_PARENT, G_LTDC),
+	MGATE_MP1(DSI_PX, "dsi_px", "pll4_q", CLK_IS_CRITICAL | CLK_SET_RATE_PARENT, G_DSI),
+	MGATE_MP1(LTDC_PX, "ltdc_px", "pll4_q", CLK_IS_CRITICAL | CLK_SET_RATE_PARENT, G_LTDC),
+	
 	MGATE_MP1(GPU_K, "gpu_k", "pll2_q", 0, G_GPU),
 	MGATE_MP1(DAC12_K, "dac12_k", "ck_lsi", 0, G_DAC12),
 
diff --git a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
index 2e4334f0a..7654c3d2b 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
@@ -229,6 +229,8 @@
 #define PHY_STATUS_TIMEOUT_US		10000
 #define CMD_PKT_STATUS_TIMEOUT_US	20000
 
+static bool first_pass = true;
+
 struct dw_mipi_dsi {
 	struct drm_bridge bridge;
 	struct mipi_dsi_host dsi_host;
@@ -859,39 +861,46 @@ static void dw_mipi_dsi_bridge_mode_set(struct drm_bridge *bridge,
 		DRM_DEBUG_DRIVER("Phy get_lane_mbps() failed\n");
 
 	pm_runtime_get_sync(dsi->dev);
-	dw_mipi_dsi_init(dsi);
-	dw_mipi_dsi_dpi_config(dsi, adjusted_mode);
-	dw_mipi_dsi_packet_handler_config(dsi);
-	dw_mipi_dsi_video_mode_config(dsi);
-	dw_mipi_dsi_video_packet_config(dsi, adjusted_mode);
-	dw_mipi_dsi_command_mode_config(dsi);
-	dw_mipi_dsi_line_timer_config(dsi, adjusted_mode);
-	dw_mipi_dsi_vertical_timing_config(dsi, adjusted_mode);
-
-	dw_mipi_dsi_dphy_init(dsi);
-	dw_mipi_dsi_dphy_timing_config(dsi);
-	dw_mipi_dsi_dphy_interface_config(dsi);
-
-	dw_mipi_dsi_clear_err(dsi);
-
-	ret = phy_ops->init(priv_data);
-	if (ret)
-		DRM_DEBUG_DRIVER("Phy init() failed\n");
 
-	dw_mipi_dsi_dphy_enable(dsi);
+	if (!first_pass) {
+		dw_mipi_dsi_init(dsi);
+		dw_mipi_dsi_dpi_config(dsi, adjusted_mode);
+		dw_mipi_dsi_packet_handler_config(dsi);
+		dw_mipi_dsi_video_mode_config(dsi);
+		dw_mipi_dsi_video_packet_config(dsi, adjusted_mode);
+		dw_mipi_dsi_command_mode_config(dsi);
+		dw_mipi_dsi_line_timer_config(dsi, adjusted_mode);
+		dw_mipi_dsi_vertical_timing_config(dsi, adjusted_mode);
+
+		dw_mipi_dsi_dphy_init(dsi);
+		dw_mipi_dsi_dphy_timing_config(dsi);
+		dw_mipi_dsi_dphy_interface_config(dsi);
 
-	dw_mipi_dsi_wait_for_two_frames(adjusted_mode);
+		dw_mipi_dsi_clear_err(dsi);
 
-	/* Switch to cmd mode for panel-bridge pre_enable & panel prepare */
-	dw_mipi_dsi_set_mode(dsi, 0);
+		ret = phy_ops->init(priv_data);
+		if (ret)
+			DRM_DEBUG_DRIVER("Phy init() failed\n");
+
+		dw_mipi_dsi_dphy_enable(dsi);
+
+		dw_mipi_dsi_wait_for_two_frames(adjusted_mode);
+
+		/* Switch to cmd mode for panel-bridge pre_enable & panel prepare */
+		dw_mipi_dsi_set_mode(dsi, 0);
+	}
 }
 
 static void dw_mipi_dsi_bridge_enable(struct drm_bridge *bridge)
 {
 	struct dw_mipi_dsi *dsi = bridge_to_dsi(bridge);
 
-	/* Switch to video mode for panel-bridge enable & panel enable */
-	dw_mipi_dsi_set_mode(dsi, MIPI_DSI_MODE_VIDEO);
+	if (!first_pass) {
+		/* Switch to video mode for panel-bridge enable & panel enable */
+		dw_mipi_dsi_set_mode(dsi, MIPI_DSI_MODE_VIDEO);
+	} else {
+		first_pass = false;
+	}
 }
 
 static enum drm_mode_status
@@ -995,9 +1004,9 @@ __dw_mipi_dsi_probe(struct platform_device *pdev,
 			return ERR_PTR(ret);
 		}
 
-		reset_control_assert(apb_rst);
-		usleep_range(10, 20);
-		reset_control_deassert(apb_rst);
+		//reset_control_assert(apb_rst);
+		//usleep_range(10, 20);
+		//reset_control_deassert(apb_rst);
 
 		clk_disable_unprepare(dsi->pclk);
 	}
diff --git a/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c b/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
index 5ff3a85d4..252435c1b 100644
--- a/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
+++ b/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
@@ -272,17 +272,16 @@ static int ili9881c_send_cmd_data(struct ili9881c *ctx, u8 cmd, u8 data)
 
 static int ili9881c_prepare(struct drm_panel *panel)
 {
+	/*
 	struct ili9881c *ctx = panel_to_ili9881c(panel);
 	unsigned int i;
 	int ret;
 
-	/* Power the panel */
 	ret = regulator_enable(ctx->power);
 	if (ret)
 		return ret;
 	msleep(5);
 
-	/* And reset it */
 	gpiod_set_value(ctx->reset, 1);
 	msleep(20);
 
@@ -312,7 +311,7 @@ static int ili9881c_prepare(struct drm_panel *panel)
         mdelay(120);
         buf[0] = MIPI_DCS_SET_DISPLAY_ON;
         mipi_dsi_dcs_write_buffer(ctx->dsi, buf, 2);
-
+	*/
 	return 0;
 }
 
@@ -338,12 +337,13 @@ static int ili9881c_disable(struct drm_panel *panel)
 
 static int ili9881c_unprepare(struct drm_panel *panel)
 {
+	/*
 	struct ili9881c *ctx = panel_to_ili9881c(panel);
 
 	mipi_dsi_dcs_enter_sleep_mode(ctx->dsi);
 	regulator_disable(ctx->power);
 	gpiod_set_value(ctx->reset, 1);
-
+	*/
 	return 0;
 }
 
@@ -353,13 +353,13 @@ static const struct drm_display_mode bananapi_default_mode = {
 
 	.hdisplay	= 720,
 	.hsync_start	= 720 + 20,
-	.hsync_end	= 720 + 20 + 60,
-	.htotal		= 720 + 20 + 60 + 20,
+	.hsync_end	= 720 + 20 + 2,
+	.htotal		= 720 + 20 + 2 + 20,
 
 	.vdisplay	= 1280,
-	.vsync_start	= 1280 + 10,
-	.vsync_end	= 1280 + 10 + 2,
-	.vtotal		= 1280 + 10 + 2 + 15,
+	.vsync_start	= 1280 + 15,
+	.vsync_end	= 1280 + 15 + 2,
+	.vtotal		= 1280 + 15 + 2 + 10,
 	.flags		= 0,
 };
 
diff --git a/drivers/gpu/drm/stm/ltdc.c b/drivers/gpu/drm/stm/ltdc.c
index 013b9f9c6..9c538310c 100644
--- a/drivers/gpu/drm/stm/ltdc.c
+++ b/drivers/gpu/drm/stm/ltdc.c
@@ -1256,11 +1256,11 @@ int ltdc_load(struct drm_device *ddev)
 		}
 	}
 
-	if (!IS_ERR(rstc)) {
-		reset_control_assert(rstc);
-		usleep_range(10, 20);
-		reset_control_deassert(rstc);
-	}
+	//if (!IS_ERR(rstc)) {
+	//	reset_control_assert(rstc);
+	//	usleep_range(10, 20);
+	//	reset_control_deassert(rstc);
+	//}
 
 	/* Disable interrupts */
 	reg_clear(ldev->regs, LTDC_IER,
